{"version":3,"sources":["components/GlobalStyles.js","components/data/levels.js","components/data/merge.js","utils/config.js","components/data/data-context.js","theme/index.js","theme/shadows.js","theme/typography.js","layouts/DashboardLayout/NavBar/NavItem.js","layouts/DashboardLayout/NavBar/index.js","layouts/DashboardLayout/TopBar.js","layouts/DashboardLayout/index.js","components/Page.js","views/dashboard/TotalCases.js","views/dashboard/TotalActive.js","components/map/layers.js","components/map/geo-coder.js","components/map/popup.js","components/map/index.js","components/date-slider/index.js","components/selector/index.js","views/dashboard/MapDetails.js","views/dashboard/TotalRecovered.js","views/dashboard/TotalTests.js","views/dashboard/index.js","components/suburb-selector/index.js","views/totals/chart.js","views/totals/index.js","views/distribution/population.js","views/distribution/cases.js","views/distribution/active.js","views/distribution/recovered.js","views/distribution/tests.js","views/distribution/index.js","views/correlation/grid.js","views/correlation/chart.js","views/correlation/chart-grid.js","views/correlation/resizeHook.js","views/correlation/numbers-grid.js","views/correlation/index.js","views/regression/chart-selector.js","views/regression/chart.js","views/regression/chart-type-options.js","views/regression/index.js","routes.js","App.js","index.js"],"names":["useStyles","makeStyles","createStyles","boxSizing","margin","padding","html","height","width","body","backgroundColor","a","textDecoration","GlobalStyles","caseLevels","start","end","key","testLevels","activeLevels","recoveredLevels","bagKeys","date","testsKey","activeKey","totalKey","rangeTestsKey","rangeActiveKey","rangeRecoveredKey","recoveredKey","deadKey","formatMap","data","reduce","acc","curr","rootEntry","has","Date","get","Map","set","POA_NAME16","getLevelKey","levels","count","entry","find","item","undefined","mergeData","postCodesGeometry","postCodes","casesInitial","cases","populationInitial","population","testsInitial","tests","caseLevelKey","testLevelKey","activeLevelsKey","recoveredLevelsKey","toString","suburbs","push","postCode","name","Combined","populationByCode","dates","Array","from","keys","selectedDate","length","features","forEach","feature","caseEntry","testsEntry","properties","hasCasesPOA","caseEntryValue","total","parseInt","Cases","recovered","Recovered","dead","Deaths","Active","testEntryValue","Number","testRange","Tests","RecentTests","Recent","populationEntry","Tot_p_p","suburbName","config","Object","freeze","map","token","process","baseUrl","source","DataContext","createContext","DataConsumer","Consumer","ContextProvider","Provider","getResource","url","fetch","then","response","json","console","log","importData","DataProvider","children","useState","loaded","setData","useEffect","prevData","result","value","theme","createMuiTheme","palette","background","dark","default","colors","common","white","paper","primary","main","indigo","secondary","text","blueGrey","shadows","typography","h1","fontWeight","fontSize","letterSpacing","h2","h3","h4","h5","h6","overline","display","paddingTop","paddingBottom","button","color","fontWeightMedium","justifyContent","textTransform","icon","marginRight","spacing","title","active","NavItem","className","href","Icon","rest","classes","ListItem","clsx","disableGutters","Button","activeClassName","component","RouterLink","to","size","items","DashboardIcon","MultilineChartIcon","EqualizerIcon","ShuffleIcon","BlurOffIcon","mobileDrawer","NavBar","onMobileClose","openMobile","location","useLocation","pathname","content","Box","flexDirection","p","List","flexGrow","Drawer","anchor","onClose","open","variant","defaultProps","root","paddingLeft","minWidth","subTitle","TopBar","onMobileNavOpen","AppBar","elevation","Toolbar","IconButton","onClick","Typography","gutterBottom","style","textAlign","Link","target","rel","overflow","wrapper","flex","contentContainer","DashboardLayout","isMobileNavOpen","setMobileNavOpen","Page","forwardRef","ref","Helmet","red","differenceIcon","green","differenceValue","TotalCases","useContext","useMemo","lastDateData","values","secondLastDateData","totalCases","progressCases","Math","abs","Card","CardContent","container","justify","Intl","NumberFormat","format","Avatar","mt","alignItems","toFixed","progressUpIcon","progressDownIcon","TotalActive","totalActive","progressActive","layers","getCodeFilter","context","i","id","split","shift","cur","GeoCoder","mapRef","containerRef","onViewportChange","countries","bbox","limit","mapboxApiAccessToken","filter","Popup","latitude","longitude","suburb","tested","closeButton","closeOnClick","mapType","selectorData","swapMapStyle","mapStyle","isStyleLoaded","setLayoutProperty","swap","setTimeout","zoom","viewport","setViewport","useRef","geoCoderRef","getPropKeys","show","popup","setPopup","slice","min","join","propertyKeys","usePopup","current","getMap","nextViewport","e","lngLat","viewportData","transitionDuration","type","paint","DateSlider","dateChanged","setValue","Slider","onChange","_","index","aria-labelledby","step","max","Selector","selectionChanged","selectedKey","setSelectedKey","FormControl","RadioGroup","row","aria-label","FormControlLabel","control","Radio","label","labelPlacement","sliderDate","slider","paddingRight","selector","useContentStyles","MapDetails","contentClasses","dateValue","setDateValue","setMapStyle","Divider","position","avatar","TotalCustomers","totalRecovered","progressRecovered","blue","TotalProfit","totalTests","progressTests","minHeight","Dashboard","Container","maxWidth","lg","sm","xl","xs","TotalRecovered","TotalTests","md","option","optionHeader","SuburbSelect","Autocomplete","multiple","disableCloseOnSelect","options","getOptionLabel","renderInput","params","TextField","renderOption","substring","data-length","TotalsChart","useTheme","animation","cornerRadius","layout","top","left","right","bottom","legend","maintainAspectRatio","responsive","scales","xAxes","ticks","fontColor","gridLines","drawBorder","yAxes","beginAtZero","borderDash","borderDashOffset","divider","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","tooltips","bodyFontColor","borderColor","borderWidth","enabled","footerFontColor","intersect","mode","titleFontColor","Totals","selectedSuburbs","setSelectedSuburbs","prev","daily","cumulative","prevDate","calcTotal","diff","calcSuburbsTotal","chartData","datasets","order","labels","entries","Fragment","Population","computeHistogram","isNaN","barThickness","barPercentage","Distribution","setDate","Header","Grid","Chart","ChartGrid","window","innerWidth","setWidth","resizeListener","useCallback","addEventListener","removeEventListener","useResize","tileWidth","x","Cell","dataSlice","sampleCorrelation","y","NumbersGrid","header","sortArray","compare","sort","Correlation","displayType","setDisplayType","mainData","b","ChartSelector","xName","yName","lineData","regressionData","line","linearRegressionLine","linearRegression","tooltipLabel","fill","callbacks","tooltipData","datasetIndex","Regression","chartTypes","setChartTypes","routes","path","element","progressWrapper","marginLeft","progress","App","routing","useRoutes","renderBody","LinearProgress","ThemeProvider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e83c1894.chunk.js","sourcesContent":["import { createStyles, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => createStyles({\n  '@global': {\n    '*': {\n      boxSizing: 'border-box',\n      margin: 0,\n      padding: 0,\n    },\n    html: {\n      '-webkit-font-smoothing': 'antialiased',\n      '-moz-osx-font-smoothing': 'grayscale',\n      height: '100%',\n      width: '100%'\n    },\n    body: {\n      backgroundColor: '#f4f6f8',\n      height: '100%',\n      width: '100%'\n    },\n    a: {\n      textDecoration: 'none'\n    },\n    '#root': {\n      height: '100%',\n      width: '100%'\n    }\n  }\n}));\n\nconst GlobalStyles = () => {\n  useStyles();\n\n  return null;\n};\n\nexport default GlobalStyles;\n","export const caseLevels = [{\n  start: 0,\n  end: 9,\n  key: 9\n}, {\n  start: 10,\n  end: 19,\n  key: 19\n}, {\n  start: 20,\n  end: 29,\n  key: 29\n}, {\n  start: 30,\n  end: 39,\n  key: 39\n}, {\n  start: 40,\n  end: 49,\n  key: 49\n}, {\n  start: 50,\n  key: 500\n}];\n\nexport const testLevels = [{\n  start: 0,\n  end: 250,\n  key: 250\n}, {\n  start: 251,\n  end: 499,\n  key: 500\n}, {\n  start: 500,\n  end: 999,\n  key: 1000\n}, {\n  start: 1000,\n  end: 1999,\n  key: 2000\n}, {\n  start: 2000,\n  end: 2999,\n  key: 3000\n}, {\n  start: 3000,\n  key: 3000000\n}];\n\nexport const activeLevels = [{\n  start: 1,\n  end: 2,\n  key: 2\n}, {\n  start: 3,\n  end: 7,\n  key: 7\n}, {\n  start: 8,\n  end: 20,\n  key: 20\n}, {\n  start: 21,\n  end: 50,\n  key: 50\n}, {\n  start: 51,\n  key: 51\n}];\n\nexport const recoveredLevels = [{\n  start: 0,\n  end: 2,\n  key: 2\n}, {\n  start: 3,\n  end: 7,\n  key: 7\n}, {\n  start: 8,\n  end: 20,\n  key: 20\n}, {\n  start: 21,\n  end: 50,\n  key: 50\n}, {\n  start: 51,\n  key: 51\n}];\n\nexport const bagKeys = (date) => ({\n  testsKey: `${date}-tests`,\n  activeKey: `${date}-active`,\n  totalKey: `${date}-total`,\n  rangeTestsKey: `${date}-testRange`,\n  rangeActiveKey: `${date}-activeRange`,\n  rangeRecoveredKey: `${date}-recoveredRange`,\n  recoveredKey: `${date}-recovered`,\n  deadKey: `${date}-dead`\n});\n","import {\n  caseLevels,\n  testLevels,\n  activeLevels,\n  recoveredLevels,\n  bagKeys\n} from './levels';\n\nconst formatMap = (data) => data.data.reduce((acc, curr) => {\n  const rootEntry = acc.has(curr.Date) ? acc.get(curr.Date) : new Map();\n\n  acc.set(curr.Date, rootEntry);\n  rootEntry.set(curr.POA_NAME16, curr);\n\n  return acc;\n}, new Map());\n\nconst formatPopulation = (data) => data.reduce((acc, curr) => {\n  const key = curr.POA_NAME16.toString();\n\n  const { population } = acc;\n  const entry = population.has(key) ? population.get(key) : curr;\n  population.set(key, entry);\n\n  acc.suburbs.push({ postCode: key, name: curr.Combined });\n\n  return acc;\n}, {\n  population: new Map(),\n  suburbs: []\n});\n\nconst getLevelKey = (levels) => (count) => {\n  const entry = levels.find((item) => {\n    if (item.start === undefined\n      && count <= item.end) {\n      return true;\n    }\n\n    if (item.end === undefined\n      && count >= item.start) {\n      return true;\n    }\n\n    if (item.start <= count\n      && count <= item.end) {\n      return true;\n    }\n\n    return false;\n  });\n\n  return entry ? entry.key : 0;\n};\n\nexport const mergeData = ({\n  postCodes: postCodesGeometry,\n  cases: casesInitial,\n  population: populationInitial,\n  tests: testsInitial\n}) => {\n  if (!postCodesGeometry) {\n    return {};\n  }\n\n  const caseLevelKey = getLevelKey(caseLevels);\n  const testLevelKey = getLevelKey(testLevels);\n  const activeLevelsKey = getLevelKey(activeLevels);\n  const recoveredLevelsKey = getLevelKey(recoveredLevels);\n\n  const cases = formatMap(casesInitial);\n  const tests = formatMap(testsInitial);\n  const { population: populationByCode, suburbs } = formatPopulation(populationInitial);\n\n  const dates = Array.from(cases.keys());\n  const selectedDate = dates[dates.length - 1];\n\n  postCodesGeometry.features.forEach((feature) => {\n    dates.forEach((date) => {\n      const caseEntry = cases.get(date);\n      const testsEntry = tests.get(date);\n\n      const {\n        testsKey, activeKey, totalKey, recoveredKey, deadKey,\n        rangeTestsKey, rangeActiveKey, rangeRecoveredKey\n      } = bagKeys(date);\n\n      feature.properties[date] = 0;\n\n      feature.properties[testsKey] = 0;\n      feature.properties[activeKey] = 0;\n      feature.properties[totalKey] = 0;\n      feature.properties[recoveredKey] = 0;\n      feature.properties[deadKey] = 0;\n\n      // ranges\n      feature.properties[rangeTestsKey] = 0;\n      feature.properties[rangeActiveKey] = 0;\n      feature.properties[rangeRecoveredKey] = 0;\n\n      const hasCasesPOA = caseEntry.has(feature.properties.POA_NAME16);\n\n      if (hasCasesPOA) {\n        const caseEntryValue = caseEntry.get(feature.properties.POA_NAME16);\n        const total = parseInt(caseEntryValue.Cases, 10);\n        const recovered = parseInt(caseEntryValue.Recovered, 10);\n        const dead = parseInt(caseEntryValue.Deaths, 10);\n        caseEntryValue.Active = recovered === 0 ? 0 : total - (recovered + dead);\n\n        feature.properties[date] = caseLevelKey(total);\n        feature.properties[rangeActiveKey] = activeLevelsKey(caseEntryValue.Active);\n        feature.properties[rangeRecoveredKey] = recoveredLevelsKey(recovered);\n\n        feature.properties[totalKey] = total;\n        feature.properties[activeKey] = caseEntryValue.Active;\n        feature.properties[recoveredKey] = recovered;\n        feature.properties[deadKey] = dead;\n      }\n\n      if (testsEntry && testsEntry.has(feature.properties.POA_NAME16)) {\n        const testEntryValue = testsEntry.get(feature.properties.POA_NAME16);\n        const total = parseInt(testEntryValue.Number, 10);\n        const testRange = testLevelKey(total);\n\n        if (hasCasesPOA) {\n          const caseEntryValue = caseEntry.get(feature.properties.POA_NAME16);\n          caseEntryValue.Tests = testEntryValue.Number;\n          caseEntryValue.RecentTests = testEntryValue.Recent;\n        }\n\n        feature.properties[testsKey] = total;\n        feature.properties[rangeTestsKey] = testRange;\n      }\n    });\n\n    if (populationByCode.has(feature.properties.POA_NAME16)) {\n      const populationEntry = populationByCode.get(feature.properties.POA_NAME16);\n      feature.properties.population = populationEntry.Tot_p_p;\n      feature.properties.suburbName = populationEntry.Combined;\n    }\n  });\n\n  return {\n    postCodesGeometry,\n    suburbs,\n    cases,\n    populationByCode,\n    population: populationInitial,\n    tests,\n    selectedDate,\n    dates\n  };\n};\n","export const config = Object.freeze({\n  map: {\n    token: process.env.REACT_APP_MAP_TOKEN\n  },\n  data: {\n    baseUrl: process.env.REACT_APP_DATA_URL\n  },\n  source: {\n    baseUrl: process.env.REACT_APP_GITHUB_URL\n  }\n});\n","import React, {\n  createContext, useEffect, useState\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { config } from 'src/utils/config';\nimport { mergeData } from './merge';\n\nexport const DataContext = createContext({});\nexport const DataConsumer = DataContext.Consumer;\nconst ContextProvider = DataContext.Provider;\n\nconst { baseUrl } = config.data;\n\nconst getResource = (url) => fetch(url)\n  .then((response) => response.json())\n  .then((data) => { console.log(data); return data; });\n\nconst importData = async () => {\n  const postCodes = await getResource(`${baseUrl}/post-codes.json`);\n  const cases = await getResource(`${baseUrl}/cases-total.json`);\n  const population = await getResource(`${baseUrl}/population.json`);\n  const tests = await getResource(`${baseUrl}/tests-total.json`);\n\n  return {\n    postCodes, cases, population, tests\n  };\n};\n\nexport const DataProvider = ({ children }) => {\n  const [data, setData] = useState({ loaded: false });\n\n  useEffect(() => {\n    importData()\n      .then(({\n        postCodes, cases, population, tests\n      }) => {\n        const prevData = mergeData({\n          postCodes, cases, population, tests\n        });\n\n        const result = {\n          ...prevData,\n          loaded: true\n        };\n\n        setData(result);\n      });\n  }, []);\n\n  return (\n    <ContextProvider value={data}>\n      {children}\n    </ContextProvider>\n  );\n};\n\nDataProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import { createMuiTheme, colors } from '@material-ui/core';\nimport shadows from './shadows';\nimport typography from './typography';\n\nconst theme = createMuiTheme({\n  palette: {\n    background: {\n      dark: '#F4F6F8',\n      default: colors.common.white,\n      paper: colors.common.white\n    },\n    primary: {\n      main: colors.indigo[500]\n    },\n    secondary: {\n      main: colors.indigo[500]\n    },\n    text: {\n      primary: colors.blueGrey[900],\n      secondary: colors.blueGrey[600]\n    }\n  },\n  shadows,\n  typography\n});\n\nexport default theme;\n","export default [\n  'none',\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\n];\n","export default {\n  h1: {\n    fontWeight: 500,\n    fontSize: 35,\n    letterSpacing: '-0.24px'\n  },\n  h2: {\n    fontWeight: 500,\n    fontSize: 29,\n    letterSpacing: '-0.24px'\n  },\n  h3: {\n    fontWeight: 500,\n    fontSize: 24,\n    letterSpacing: '-0.06px'\n  },\n  h4: {\n    fontWeight: 500,\n    fontSize: 20,\n    letterSpacing: '-0.06px'\n  },\n  h5: {\n    fontWeight: 500,\n    fontSize: 16,\n    letterSpacing: '-0.05px'\n  },\n  h6: {\n    fontWeight: 500,\n    fontSize: 14,\n    letterSpacing: '-0.05px'\n  },\n  overline: {\n    fontWeight: 500\n  }\n};\n","import React from 'react';\nimport { NavLink as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  ListItem,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  item: {\n    display: 'flex',\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  button: {\n    color: theme.palette.text.secondary,\n    fontWeight: theme.typography.fontWeightMedium,\n    justifyContent: 'flex-start',\n    letterSpacing: 0,\n    padding: '10px 8px',\n    textTransform: 'none',\n    width: '100%'\n  },\n  icon: {\n    marginRight: theme.spacing(1)\n  },\n  title: {\n    marginRight: 'auto'\n  },\n  active: {\n    color: theme.palette.primary.main,\n    '& $title': {\n      fontWeight: theme.typography.fontWeightMedium\n    },\n    '& $icon': {\n      color: theme.palette.primary.main\n    }\n  }\n}));\n\nconst NavItem = ({\n  className,\n  href,\n  icon: Icon,\n  title,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  return (\n    <ListItem\n      className={clsx(classes.item, className)}\n      disableGutters\n      {...rest}\n    >\n      <Button\n        activeClassName={classes.active}\n        className={classes.button}\n        component={RouterLink}\n        to={href}\n      >\n        {Icon && (\n          <Icon\n            className={classes.icon}\n            size=\"20\"\n          />\n        )}\n        <span className={classes.title}>\n          {title}\n        </span>\n      </Button>\n    </ListItem>\n  );\n};\n\nNavItem.propTypes = {\n  className: PropTypes.string,\n  href: PropTypes.string,\n  icon: PropTypes.elementType,\n  title: PropTypes.string\n};\n\nexport default NavItem;\n","import React, { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Drawer,\n  List,\n  makeStyles\n} from '@material-ui/core';\nimport MultilineChartIcon from '@material-ui/icons/MultilineChart';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport BlurOffIcon from '@material-ui/icons/BlurOff';\nimport NavItem from './NavItem';\n\nconst items = [\n  {\n    href: process.env.PUBLIC_URL,\n    icon: DashboardIcon,\n    title: 'Dashboard'\n  },\n  {\n    href: `${process.env.PUBLIC_URL}/totals`,\n    icon: MultilineChartIcon,\n    title: 'Cumulative Totals'\n  },\n  {\n    href: `${process.env.PUBLIC_URL}/distribution`,\n    icon: EqualizerIcon,\n    title: 'Distribution'\n  },\n  {\n    href: `${process.env.PUBLIC_URL}/correlation`,\n    icon: ShuffleIcon,\n    title: 'Correlation'\n  },\n  {\n    href: `${process.env.PUBLIC_URL}/regression`,\n    icon: BlurOffIcon,\n    title: 'Regression'\n  }\n];\n\nconst useStyles = makeStyles(() => ({\n  mobileDrawer: {\n    width: 256\n  }\n}));\n\nconst NavBar = ({ onMobileClose, openMobile }) => {\n  const classes = useStyles();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (openMobile && onMobileClose) {\n      onMobileClose();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.pathname]);\n\n  const content = (\n    <Box\n      height=\"100%\"\n      display=\"flex\"\n      flexDirection=\"column\"\n    >\n      <Box p={2}>\n        <List>\n          {items.map((item) => (\n            <NavItem\n              href={item.href}\n              key={item.title}\n              title={item.title}\n              icon={item.icon}\n            />\n          ))}\n        </List>\n      </Box>\n      <Box flexGrow={1} />\n    </Box>\n  );\n\n  return (\n    <>\n      <Drawer\n        anchor=\"left\"\n        classes={{ paper: classes.mobileDrawer }}\n        onClose={onMobileClose}\n        open={openMobile}\n        variant=\"temporary\"\n      >\n        {content}\n      </Drawer>\n    </>\n  );\n};\n\nNavBar.propTypes = {\n  onMobileClose: PropTypes.func,\n  openMobile: PropTypes.bool\n};\n\nNavBar.defaultProps = {\n  onMobileClose: () => {},\n  openMobile: false\n};\n\nexport default NavBar;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar,\n  Box,\n  IconButton,\n  Toolbar,\n  makeStyles,\n  Typography,\n  Link,\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport { config } from 'src/utils/config';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  title: {\n    paddingLeft: '20px',\n    minWidth: '50%'\n  },\n  subTitle: {\n    fontSize: '15px'\n  }\n}));\n\nconst TopBar = ({\n  className,\n  onMobileNavOpen,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar\n      className={clsx(classes.root, className)}\n      elevation={0}\n      {...rest}\n    >\n      <Toolbar>\n        <IconButton\n          color=\"inherit\"\n          onClick={onMobileNavOpen}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Box className={classes.title}>\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n          >\n            NSW Australia coronavirus spread analysis\n          </Typography>\n          <Typography\n            gutterBottom\n            variant=\"inherit\"\n            className={classes.subTitle}\n          >\n            The information presented is for demonstration purposes only\n          </Typography>\n        </Box>\n        <Box style={{ width: '100%', textAlign: 'end' }}>\n          <Link\n            href={config.source.baseUrl}\n            target=\"_blank\"\n            rel=\"noopener\"\n          >\n            <GitHubIcon style={{ color: '#ffff' }} />\n          </Link>\n        </Box>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nTopBar.propTypes = {\n  className: PropTypes.string,\n  onMobileNavOpen: PropTypes.func\n};\n\nexport default TopBar;\n","import React, { useState } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core';\nimport NavBar from './NavBar';\nimport TopBar from './TopBar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  },\n  wrapper: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    paddingTop: 64\n  },\n  contentContainer: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden'\n  },\n  content: {\n    flex: '1 1 auto',\n    height: '100%',\n    overflow: 'auto'\n  }\n}));\n\nconst DashboardLayout = () => {\n  const classes = useStyles();\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\n\n  return (\n    <div className={classes.root}>\n      <TopBar onMobileNavOpen={() => setMobileNavOpen(true)} />\n      <NavBar\n        onMobileClose={() => setMobileNavOpen(false)}\n        openMobile={isMobileNavOpen}\n      />\n      <div className={classes.wrapper}>\n        <div className={classes.contentContainer}>\n          <div className={classes.content}>\n            <Outlet />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardLayout;\n","import React, { forwardRef } from 'react';\nimport { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\nconst Page = forwardRef(({\n  children,\n  title = '',\n  ...rest\n}, ref) => {\n  return (\n    <div\n      ref={ref}\n      {...rest}\n    >\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string\n};\n\nexport default Page;\n","import React, { useContext, useMemo } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport { DataContext } from 'src/components/data';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  },\n  cases: {\n    backgroundColor: colors.red[300],\n    height: 56,\n    width: 56\n  },\n  differenceIcon: {\n    color: colors.green[900]\n  },\n  differenceValue: {\n    color: colors.green[900],\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst TotalCases = ({ className, ...rest }) => {\n  const { cases, dates } = useContext(DataContext);\n  const classes = useStyles();\n\n  const { totalCases, progressCases } = useMemo(() => {\n    const lastDateData = [\n      ...cases.get(dates[dates.length - 1]).values()\n    ]\n      .reduce((acc, value) => acc + value.Cases, 0);\n\n    const secondLastDateData = [\n      ...cases.get(dates[dates.length - 2]).values()\n    ]\n      .reduce((acc, value) => acc + value.Cases, 0);\n\n    const progress = lastDateData >= secondLastDateData ? 1 : -1;\n    const diff = Math.abs(lastDateData - secondLastDateData);\n    const percent = (progress * diff * 100) / secondLastDateData;\n\n    return {\n      totalCases: lastDateData, progressCases: percent\n    };\n  }, [cases, dates]);\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"h6\"\n            >\n              TOTAL CASES\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h3\"\n            >\n              {new Intl.NumberFormat().format(totalCases)}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.cases}>\n              <ErrorOutlineIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <Box\n          mt={2}\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <ArrowUpwardIcon className={classes.differenceIcon} />\n          <Typography\n            className={classes.differenceValue}\n            variant=\"body2\"\n          >\n            {progressCases.toFixed(5)}\n            %\n          </Typography>\n          <Typography\n            color=\"textSecondary\"\n            variant=\"caption\"\n          >\n            Since last day\n          </Typography>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nTotalCases.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TotalCases;\n","import React, { useContext, useMemo } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport { DataContext } from 'src/components/data';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  },\n  cases: {\n    backgroundColor: colors.red[800],\n    height: 56,\n    width: 56\n  },\n  progressUpIcon: {\n    color: colors.red[900]\n  },\n  progressDownIcon: {\n    color: colors.green[900]\n  },\n  differenceValue: {\n    color: colors.green[900],\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst TotalActive = ({ className, ...rest }) => {\n  const { cases, dates } = useContext(DataContext);\n  const classes = useStyles();\n\n  const { totalActive, progressActive } = useMemo(() => {\n    const lastDateData = [\n      ...cases.get(dates[dates.length - 1]).values()\n    ]\n      .reduce((acc, value) => acc + (value.Active ? value.Active : 0), 0);\n\n    const secondLastDateData = [\n      ...cases.get(dates[dates.length - 2]).values()\n    ]\n      .reduce((acc, value) => acc + (value.Active ? value.Active : 0), 0);\n\n    const progress = lastDateData >= secondLastDateData ? 1 : -1;\n    const diff = Math.abs(lastDateData - secondLastDateData);\n    const percent = (progress * diff * 100) / secondLastDateData;\n\n    return {\n      totalActive: lastDateData, progressActive: percent\n    };\n  }, [cases, dates]);\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"h6\"\n            >\n              TOTAL ACTIVE\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h3\"\n            >\n              {new Intl.NumberFormat().format(totalActive)}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.cases}>\n              <ErrorOutlineIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <Box\n          mt={2}\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          {progressActive < 0\n            ? <ArrowDownwardIcon className={classes.progressDownIcon} />\n            : <ArrowUpwardIcon className={classes.progressUpIcon} />}\n          <Typography\n            className={classes.differenceValue}\n            variant=\"body2\"\n          >\n            {progressActive.toFixed(5)}\n            %\n          </Typography>\n          <Typography\n            color=\"textSecondary\"\n            variant=\"caption\"\n          >\n            Since last day\n          </Typography>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nTotalActive.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TotalActive;\n","import React from 'react';\nimport { Source, Layer } from 'react-map-gl';\n\nimport {\n  caseLevels, testLevels, activeLevels, bagKeys\n} from 'src/components/data';\n\nconst getCaseColorSchema = () => ([\n  0, 'transparent',\n  caseLevels[0].key, '#ffb3b3',\n  caseLevels[1].key, '#ff8080',\n  caseLevels[2].key, '#ff4d4d',\n  caseLevels[3].key, '#e60000',\n  caseLevels[4].key, '#b30000',\n  caseLevels[5].key, '#660000'\n]);\n\nconst getTestColorSchema = () => ([\n  0, 'transparent',\n  testLevels[0].key, '#a6c6ed',\n  testLevels[1].key, '#8ab3e6',\n  testLevels[2].key, '#6189ba',\n  testLevels[3].key, '#4478b8',\n  testLevels[4].key, '#326cb3',\n  testLevels[5].key, '#1a5cad'\n]);\n\nconst getActiveColorSchema = () => ([\n  0, 'transparent',\n  activeLevels[0].key, '#ffb3b3',\n  activeLevels[1].key, '#ff8080',\n  activeLevels[2].key, '#ff4d4d',\n  activeLevels[3].key, '#e60000',\n  activeLevels[4].key, '#b30000',\n]);\n\nconst getRecoveredColorSchema = () => ([\n  0, 'transparent',\n  activeLevels[0].key, '#a8edbb',\n  activeLevels[1].key, '#73de91',\n  activeLevels[2].key, '#3aba5e',\n  activeLevels[3].key, '#178f39',\n  activeLevels[4].key, '#0a6624',\n]);\n\nexport const layers = {\n  casesId: 'PostcodeCases',\n  testsId: 'PostcodeTests',\n  activeId: 'PostcodeActive',\n  recoveredId: 'PostcodeRecovered'\n};\n\nexport const source = (data, selectedDate) => {\n  const { rangeTestsKey, rangeActiveKey, rangeRecoveredKey } = bagKeys(selectedDate);\n\n  return (\n    <Source type=\"geojson\" data={data}>\n      <Layer\n        id=\"Postcode\"\n        source=\"Postcode\"\n        type=\"line\"\n        paint={{\n          'line-color': '#bdb8b7',\n          'line-width': 1\n        }}\n      />\n      <Layer\n        id={layers.testsId}\n        source=\"Postcode\"\n        type=\"fill\"\n        paint={{\n          'fill-color': [\n            'interpolate',\n            ['linear'],\n            ['get', rangeTestsKey],\n            ...getTestColorSchema()\n          ],\n          'fill-opacity': 0.8\n        }}\n      />\n      <Layer\n        id={layers.activeId}\n        source=\"Postcode\"\n        type=\"fill\"\n        paint={{\n          'fill-color': [\n            'interpolate',\n            ['linear'],\n            ['get', rangeActiveKey],\n            ...getActiveColorSchema()\n          ],\n          'fill-opacity': 0.8\n        }}\n      />\n      <Layer\n        id={layers.recoveredId}\n        source=\"Postcode\"\n        type=\"fill\"\n        paint={{\n          'fill-color': [\n            'interpolate',\n            ['linear'],\n            ['get', rangeRecoveredKey],\n            ...getRecoveredColorSchema()\n          ],\n          'fill-opacity': 0.8\n        }}\n      />\n      <Layer\n        id={layers.casesId}\n        source=\"Postcode\"\n        type=\"fill\"\n        paint={{\n          'fill-color': [\n            'interpolate',\n            ['linear'],\n            ['get', selectedDate],\n            ...getCaseColorSchema()\n          ],\n          'fill-opacity': 0.8\n        }}\n      />\n    </Source>\n  );\n};\n\nexport const swap = (map, mapStyle, mapType) => {\n  if (mapStyle === mapType.cases) {\n    map.setLayoutProperty(layers.testsId, 'visibility', 'none');\n    map.setLayoutProperty(layers.casesId, 'visibility', 'visible');\n    map.setLayoutProperty(layers.activeId, 'visibility', 'none');\n    map.setLayoutProperty(layers.recoveredId, 'visibility', 'none');\n  } else if (mapStyle === mapType.tests) {\n    map.setLayoutProperty(layers.testsId, 'visibility', 'visible');\n    map.setLayoutProperty(layers.casesId, 'visibility', 'none');\n    map.setLayoutProperty(layers.activeId, 'visibility', 'none');\n    map.setLayoutProperty(layers.recoveredId, 'visibility', 'none');\n  } else if (mapStyle === mapType.active) {\n    map.setLayoutProperty(layers.testsId, 'visibility', 'none');\n    map.setLayoutProperty(layers.casesId, 'visibility', 'none');\n    map.setLayoutProperty(layers.activeId, 'visibility', 'visible');\n    map.setLayoutProperty(layers.recoveredId, 'visibility', 'none');\n  } else if (mapStyle === mapType.recovered) {\n    map.setLayoutProperty(layers.testsId, 'visibility', 'none');\n    map.setLayoutProperty(layers.casesId, 'visibility', 'none');\n    map.setLayoutProperty(layers.activeId, 'visibility', 'none');\n    map.setLayoutProperty(layers.recoveredId, 'visibility', 'visible');\n  }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Geocoder from 'react-map-gl-geocoder';\n\nconst getCodeFilter = (item) => {\n  if (!item.context) {\n    return item;\n  }\n\n  if (item.context.length <= 4) {\n    return item.context.map((i) => {\n      // id is in the form {index}.{id} per https://github.com/mapbox/carmen/blob/master/carmen-geojson.md\n      // this example attempts to find the `region` named `New South Wales`\n      return (i.id.split('.').shift() === 'region' && i.text === 'New South Wales');\n    }).reduce((acc, cur) => {\n      return acc || cur;\n    });\n  }\n\n  return item;\n};\n\nexport const GeoCoder = ({\n  mapRef, containerRef, token, onViewportChange\n}) => (\n  <Geocoder\n    mapRef={mapRef}\n    containerRef={containerRef}\n    countries=\"au\"\n    bbox={[139.965, -38.030, 155.258, -27.839]}\n    limit={200}\n    onViewportChange={onViewportChange}\n    mapboxApiAccessToken={token}\n    filter={getCodeFilter}\n  />\n);\n\nGeoCoder.propTypes = {\n  mapRef: PropTypes.any.isRequired,\n  containerRef: PropTypes.any.isRequired,\n  token: PropTypes.string.isRequired,\n  onViewportChange: PropTypes.func.isRequired\n};\n","import React, { useState } from 'react';\nimport { Popup as MapPopup } from 'react-map-gl';\nimport PropTypes from 'prop-types';\n\nexport const usePopup = (getPropKeys) => {\n  const [popup, setPopup] = useState({\n    show: false,\n    latitude: undefined,\n    longitude: undefined,\n    suburb: undefined,\n    total: undefined,\n    tested: undefined,\n    active: undefined,\n    recovered: undefined,\n    dead: undefined,\n    population: undefined\n  });\n\n  const changePopup = (features, [longitude, latitude]) => {\n    if (!features || features.length <= 0 || !features[0].properties.POA_NAME16) {\n      setPopup({ ...popup, show: false });\n      return;\n    }\n\n    const suburbs = features[0].properties.suburbName.split(',');\n    const suburb = suburbs.slice(0, Math.min(3, suburbs.length)).join(', ');\n    const { population } = features[0].properties;\n\n    const { properties } = features[0];\n    const propertyKeys = getPropKeys();\n    const total = properties[propertyKeys.totalKey];\n    const tested = properties[propertyKeys.testsKey];\n    const active = properties[propertyKeys.activeKey];\n    const recovered = properties[propertyKeys.recoveredKey];\n    const dead = properties[propertyKeys.deadKey];\n\n    setPopup({\n      ...popup,\n      show: true,\n      longitude,\n      latitude,\n      suburb,\n      total,\n      tested,\n      active,\n      recovered,\n      dead,\n      population\n    });\n  };\n\n  return [popup, changePopup];\n};\n\nexport const Popup = ({\n  latitude,\n  longitude,\n  suburb,\n  total,\n  active,\n  recovered,\n  tested,\n  dead,\n  population\n}) => (\n  <MapPopup\n    latitude={latitude}\n    longitude={longitude}\n    closeButton={false}\n    closeOnClick={false}\n  >\n    <div>\n      <strong>{suburb}</strong>\n      <br />\n      <span>\n        {'Total: '}\n        {total}\n      </span>\n      <br />\n      <span>\n        {'Active: '}\n        {active}\n      </span>\n      <br />\n      <span>\n        {'Recovered: '}\n        {recovered}\n      </span>\n      <br />\n      <span>\n        {'Tested: '}\n        {tested}\n      </span>\n      <br />\n      <span>\n        {'Dead: '}\n        {dead}\n      </span>\n      <br />\n      <span>\n        {'Population: '}\n        {population}\n      </span>\n    </div>\n  </MapPopup>\n);\n\nPopup.propTypes = {\n  latitude: PropTypes.number.isRequired,\n  longitude: PropTypes.number.isRequired,\n  suburb: PropTypes.string.isRequired,\n  total: PropTypes.number.isRequired,\n  active: PropTypes.number.isRequired,\n  recovered: PropTypes.number.isRequired,\n  tested: PropTypes.number.isRequired,\n  dead: PropTypes.number.isRequired,\n  population: PropTypes.number.isRequired\n};\n","import 'mapbox-gl/dist/mapbox-gl.css';\nimport 'react-map-gl-geocoder/dist/mapbox-gl-geocoder.css';\nimport './map.css';\n\nimport React, {\n  useState, useRef, useContext, useEffect\n} from 'react';\nimport MapGL from 'react-map-gl';\nimport PropTypes from 'prop-types';\nimport { bagKeys, DataContext } from 'src/components/data';\nimport { config } from 'src/utils/config';\nimport { source, layers, swap } from './layers';\nimport { GeoCoder } from './geo-coder';\nimport { usePopup, Popup } from './popup';\n\nconst mapType = Object.freeze({\n  cases: layers.casesId,\n  tests: layers.testsId,\n  active: layers.activeId,\n  recovered: layers.recoveredId\n});\n\nexport const selectorData = [{\n  key: mapType.cases,\n  name: 'Total'\n}, {\n  key: mapType.active,\n  name: 'Active'\n}, {\n  key: mapType.recovered,\n  name: 'Recovered'\n}, {\n  key: mapType.tests,\n  name: 'Tests'\n}];\n\nconst swapMapStyle = (map, mapStyle) => {\n  if (map.isStyleLoaded()) {\n    swap(map, mapStyle, mapType);\n    return;\n  }\n  setTimeout(() => { swapMapStyle(map, mapStyle, mapType); }, 200);\n};\n\nexport const Map = ({ date, mapStyle }) => {\n  const { postCodesGeometry } = useContext(DataContext);\n  const [viewport, setViewport] = useState({\n    zoom: 6,\n    latitude: -33.5688,\n    longitude: 148.5093\n  });\n  const mapRef = useRef(null);\n  const geoCoderRef = useRef(null);\n  const [popup, setPopup] = usePopup(() => bagKeys(date));\n\n  useEffect(() => {\n    const map = mapRef.current?.getMap();\n    if (map) {\n      swapMapStyle(map, mapStyle);\n    }\n  }, [mapStyle]);\n\n  const handleGeocoderViewportChange = (viewportData) => {\n    const geocoderDefaultOverrides = { transitionDuration: 500 };\n\n    return setViewport({\n      ...viewportData,\n      ...geocoderDefaultOverrides\n    });\n  };\n\n  const handleClick = (e) => {\n    setPopup(e.features || null, e.lngLat);\n  };\n\n  if (!postCodesGeometry) {\n    return null;\n  }\n\n  return (\n    <div className=\"map\">\n      <div ref={geoCoderRef} className=\"geocoder\" />\n      <MapGL\n        ref={mapRef}\n        {...viewport}\n        width=\"100%\"\n        height=\"60vh\"\n        mapStyle=\"mapbox://styles/mapbox/streets-v10\"\n        onViewportChange={(nextViewport) => setViewport(nextViewport)}\n        mapboxApiAccessToken={config.map.token}\n        onClick={handleClick}\n      >\n        <GeoCoder\n          mapRef={mapRef}\n          containerRef={geoCoderRef}\n          onViewportChange={handleGeocoderViewportChange}\n          token={config.map.token}\n        />\n        {source(postCodesGeometry, date)}\n        {popup.show && <Popup {...popup} />}\n      </MapGL>\n    </div>\n  );\n};\n\nMap.propTypes = {\n  date: PropTypes.string.isRequired,\n  mapStyle: PropTypes.string.isRequired\n};\n","import React, { useContext, useState, useEffect } from 'react';\nimport { Slider } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { DataContext } from 'src/components/data';\n\nexport const DateSlider = ({ dateChanged }) => {\n  const { dates } = useContext(DataContext);\n  const [value, setValue] = useState(0);\n\n  useEffect(() => {\n    if (dates != null) {\n      setValue(dates.length - 1);\n\n      if (dateChanged) {\n        dateChanged(dates[dates.length - 1]);\n      }\n    }\n  }, [dates, dateChanged]);\n\n  if (!dates) {\n    return null;\n  }\n\n  return (\n    <Slider\n      value={value}\n      onChange={(_, index) => {\n        setValue(index);\n\n        if (dateChanged) {\n          dateChanged(dates[index]);\n        }\n      }}\n      aria-labelledby=\"discrete-slider\"\n      step={1}\n      min={0}\n      max={dates.length - 1}\n    />\n  );\n};\n\nDateSlider.propTypes = {\n  dateChanged: PropTypes.func\n};\n","import React, { useState } from 'react';\nimport PropTypes, { string } from 'prop-types';\nimport {\n  RadioGroup,\n  FormControlLabel,\n  FormControl,\n  Radio\n} from '@material-ui/core';\n\nexport const Selector = ({ data, selectionChanged }) => {\n  const [selectedKey, setSelectedKey] = useState(data[0].key);\n\n  return (\n    <FormControl component=\"fieldset\">\n      <RadioGroup\n        row\n        aria-label=\"selector\"\n        name=\"position\"\n        value={selectedKey}\n        onChange={(e) => {\n          setSelectedKey(e.target.value);\n\n          if (selectionChanged) {\n            selectionChanged(e.target.value);\n          }\n        }}\n      >\n        {data.map((item) => (\n          <FormControlLabel\n            key={item.key}\n            value={item.key}\n            control={<Radio color=\"primary\" />}\n            label={item.name}\n            labelPlacement=\"end\"\n          />\n        ))}\n      </RadioGroup>\n    </FormControl>\n  );\n};\n\nSelector.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: string,\n      name: string\n    })\n  ).isRequired,\n\n  selectionChanged: PropTypes.func\n};\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Divider,\n  makeStyles,\n  Typography,\n} from '@material-ui/core';\nimport { Map, selectorData } from 'src/components/map';\nimport { DateSlider } from 'src/components/date-slider';\nimport { Selector } from 'src/components/selector';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  sliderDate: {\n    minWidth: '100px',\n    paddingLeft: '20px',\n  },\n  slider: {\n    paddingRight: '20px',\n    width: '100%'\n  },\n  selector: {\n    paddingLeft: '30px'\n  }\n}));\n\nconst useContentStyles = makeStyles(() => ({\n  root: {\n    padding: 0\n  }\n}));\n\nconst MapDetails = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const contentClasses = useContentStyles();\n  const [dateValue, setDateValue] = useState('');\n  const [mapStyle, setMapStyle] = useState(selectorData[0].key);\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box\n        display=\"flex\"\n        p={1}\n      >\n        <div className={classes.sliderDate}>\n          <Typography>\n            {dateValue}\n          </Typography>\n        </div>\n        <div className={classes.slider}>\n          <DateSlider dateChanged={setDateValue} />\n        </div>\n      </Box>\n      <Divider />\n      <CardContent classes={{ root: contentClasses.root }}>\n        <Box\n          position=\"relative\"\n        >\n          <Map date={dateValue} mapStyle={mapStyle} />\n        </Box>\n      </CardContent>\n      <Divider />\n      <Box\n        display=\"flex\"\n        justifyContent=\"flex-start\"\n        className={classes.selector}\n      >\n        <Selector data={selectorData} selectionChanged={setMapStyle} />\n      </Box>\n    </Card>\n  );\n};\n\nMapDetails.propTypes = {\n  className: PropTypes.string\n};\n\nexport default MapDetails;\n","import React, { useMemo, useContext } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport PeopleIcon from '@material-ui/icons/PeopleOutlined';\nimport { DataContext } from 'src/components/data';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.green[600],\n    height: 56,\n    width: 56\n  },\n  differenceIcon: {\n    color: colors.green[900]\n  },\n  differenceValue: {\n    color: colors.green[900],\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst TotalCustomers = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const { cases, dates } = useContext(DataContext);\n\n  const { totalRecovered, progressRecovered } = useMemo(() => {\n    const lastDateData = [\n      ...cases.get(dates[dates.length - 1]).values()\n    ]\n      .reduce((acc, value) => acc + value.Recovered, 0);\n\n    const secondLastDateData = [\n      ...cases.get(dates[dates.length - 2]).values()\n    ]\n      .reduce((acc, value) => acc + value.Recovered, 0);\n\n    const progress = lastDateData >= secondLastDateData ? 1 : -1;\n    const diff = Math.abs(lastDateData - secondLastDateData);\n    const percent = (progress * diff * 100) / secondLastDateData;\n\n    return {\n      totalRecovered: lastDateData, progressRecovered: percent\n    };\n  }, [cases, dates]);\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"h6\"\n            >\n              TOTAL RECOVERED\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h3\"\n            >\n              {new Intl.NumberFormat().format(totalRecovered)}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <PeopleIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <Box\n          mt={2}\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <ArrowUpwardIcon className={classes.differenceIcon} />\n          <Typography\n            className={classes.differenceValue}\n            variant=\"body2\"\n          >\n            {progressRecovered.toFixed(5)}\n            %\n          </Typography>\n          <Typography\n            color=\"textSecondary\"\n            variant=\"caption\"\n          >\n            Since last day\n          </Typography>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nTotalCustomers.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TotalCustomers;\n","import React, { useContext, useMemo } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  makeStyles,\n  colors,\n  Box\n} from '@material-ui/core';\nimport LocalPharmacyIcon from '@material-ui/icons/LocalPharmacy';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport { DataContext } from 'src/components/data';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.blue[900],\n    height: 56,\n    width: 56\n  }\n}));\n\nconst TotalProfit = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const { tests, dates } = useContext(DataContext);\n\n  const { totalTests, progressTests } = useMemo(() => {\n    const lastDateData = [\n      ...tests.get(dates[dates.length - 1]).values()\n    ]\n      .reduce((acc, value) => acc + value.Number, 0);\n\n    const secondLastDateData = [\n      ...tests.get(dates[dates.length - 2]).values()\n    ]\n      .reduce((acc, value) => acc + value.Number, 0);\n\n    const progress = lastDateData >= secondLastDateData ? 1 : -1;\n    const diff = Math.abs(lastDateData - secondLastDateData);\n    const percent = (progress * diff * 100) / secondLastDateData;\n\n    return {\n      totalTests: lastDateData, progressTests: percent\n    };\n  }, [tests, dates]);\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"h6\"\n            >\n              TOTAL TESTS\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h3\"\n            >\n              {new Intl.NumberFormat().format(totalTests)}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <LocalPharmacyIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n        <Box\n          mt={2}\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <ArrowUpwardIcon className={classes.differenceIcon} />\n          <Typography\n            className={classes.differenceValue}\n            variant=\"body2\"\n          >\n            {progressTests.toFixed(5)}\n            %\n          </Typography>\n          &nbsp;&nbsp;\n          <Typography\n            color=\"textSecondary\"\n            variant=\"caption\"\n          >\n            Since last day\n          </Typography>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nTotalProfit.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TotalProfit;\n","import React from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport TotalCases from './TotalCases';\nimport TotalActive from './TotalActive';\nimport MapDetails from './MapDetails';\nimport TotalRecovered from './TotalRecovered';\nimport TotalTests from './TotalTests';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst Dashboard = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Dashboard\"\n    >\n      <Container maxWidth={false}>\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            lg={3}\n            sm={6}\n            xl={3}\n            xs={12}\n          >\n            <TotalCases />\n          </Grid>\n          <Grid\n            item\n            lg={3}\n            sm={6}\n            xl={3}\n            xs={12}\n          >\n            <TotalActive />\n          </Grid>\n          <Grid\n            item\n            lg={3}\n            sm={6}\n            xl={3}\n            xs={12}\n          >\n            <TotalRecovered />\n          </Grid>\n          <Grid\n            item\n            lg={3}\n            sm={6}\n            xl={3}\n            xs={12}\n          >\n            <TotalTests />\n          </Grid>\n          <Grid\n            item\n            lg={12}\n            md={12}\n            xl={12}\n            xs={12}\n          >\n            <MapDetails />\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n};\n\nexport default Dashboard;\n","import React, { useContext } from 'react';\nimport { TextField, makeStyles } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport PropTypes from 'prop-types';\nimport { DataContext } from 'src/components/data';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: '100%'\n  },\n  option: {\n    '& [data-length=\"long\"]': {\n      display: 'none'\n    },\n    '&:hover [data-length=\"long\"]': {\n      display: 'block'\n    }\n  },\n  optionHeader: {\n    fontWeight: 'bold'\n  }\n}));\n\nconst renderOption = (option, classes) => (\n  <div className={classes.option}>\n    <span className={classes.optionHeader}>{option.postCode}</span>\n    <br />\n    <span>{option.name.substring(0, 40)}</span>\n    <span data-length=\"long\">{option.name.substring(40)}</span>\n  </div>\n);\n\nconst SuburbSelect = ({ onChange }) => {\n  const classes = useStyles();\n  const { suburbs } = useContext(DataContext);\n\n  return (\n    <Autocomplete\n      multiple\n      disableCloseOnSelect\n      className={classes.root}\n      options={suburbs}\n      getOptionLabel={(option) => `${option.postCode} ${option.name}`}\n      renderInput={(params) => <TextField {...params} label=\"Post code / Suburb\" variant=\"outlined\" />}\n      renderOption={(option) => renderOption(option, classes)}\n      onChange={(_, value) => onChange(value)}\n    />\n  );\n};\n\nexport default SuburbSelect;\n\nSuburbSelect.propTypes = {\n  onChange: PropTypes.func.isRequired\n};\n","import React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { useTheme } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nexport const TotalsChart = ({ data }) => {\n  const theme = useTheme();\n\n  const options = {\n    animation: false,\n    cornerRadius: 0,\n    layout: {\n      padding: {\n        top: 0, left: 0, right: 0, bottom: 50\n      }\n    },\n    legend: { display: true },\n    maintainAspectRatio: false,\n    responsive: true,\n    scales: {\n      xAxes: [\n        {\n          ticks: {\n            fontColor: theme.palette.text.secondary\n          },\n          gridLines: {\n            display: false,\n            drawBorder: false\n          }\n        }\n      ],\n      yAxes: [\n        {\n          ticks: {\n            fontColor: theme.palette.text.secondary,\n            beginAtZero: true,\n            min: 0\n          },\n          gridLines: {\n            borderDash: [2],\n            borderDashOffset: [2],\n            color: theme.palette.divider,\n            drawBorder: false,\n            zeroLineBorderDash: [2],\n            zeroLineBorderDashOffset: [2],\n            zeroLineColor: theme.palette.divider\n          }\n        }\n      ]\n    },\n    tooltips: {\n      backgroundColor: theme.palette.background.default,\n      bodyFontColor: theme.palette.text.secondary,\n      borderColor: theme.palette.divider,\n      borderWidth: 1,\n      enabled: true,\n      footerFontColor: theme.palette.text.secondary,\n      intersect: false,\n      mode: 'index',\n      titleFontColor: theme.palette.text.primary\n    }\n  };\n\n  return (\n    <Bar\n      height={300}\n      data={data}\n      options={options}\n    />\n  );\n};\n\nTotalsChart.propTypes = {\n  data: PropTypes.object.isRequired\n};\n","import React, { useContext, useMemo, useState } from 'react';\nimport {\n  Container,\n  Grid,\n  Box,\n  makeStyles,\n  Typography,\n  colors,\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport { DataContext } from 'src/components/data';\nimport SuburbSelect from 'src/components/suburb-selector';\nimport { TotalsChart } from './chart';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst calcTotal = (cases, date) => {\n  if (!cases.has(date)) {\n    return 0;\n  }\n\n  return [...cases.get(date)\n    .values()]\n    .reduce((acc, curr) => acc + curr.Cases, 0);\n};\n\nconst calcSuburbsTotal = (cases, date, prevDate, suburbs, result) => {\n  suburbs.forEach((suburb) => {\n    const entry = result.has(suburb.postCode) ? result.get(suburb.postCode) : [];\n    const value = cases.has(date) && cases.get(date).has(suburb.postCode)\n      ? cases.get(date).get(suburb.postCode).Cases : 0;\n\n    const diff = !prevDate || !cases.has(date) || !cases.get(prevDate).has(suburb.postCode)\n      ? value\n      : value - cases.get(prevDate).get(suburb.postCode).Cases;\n    entry.push({ value, diff: Math.max(0, diff) });\n    result.set(suburb.postCode, entry);\n  });\n};\n\nconst Totals = () => {\n  const classes = useStyles();\n  const { cases, dates } = useContext(DataContext);\n  const [selectedSuburbs, setSelectedSuburbs] = useState([]);\n\n  const data = useMemo(() => {\n    return dates.reduce((acc, curr) => {\n      const {\n        prev, daily, cumulative, prevDate\n      } = acc;\n      const total = calcTotal(cases, curr);\n\n      cumulative.push(total);\n\n      if (!prev) {\n        daily.push(total);\n      } else {\n        const diff = total - prev;\n        daily.push(Math.max(0, diff));\n      }\n\n      acc.prev = total;\n\n      if (!cases.has(curr)) {\n        return acc;\n      }\n\n      calcSuburbsTotal(cases, curr, prevDate, selectedSuburbs, acc.suburbs);\n      acc.prevDate = curr;\n      return acc;\n    }, {\n      prev: null, daily: [], cumulative: [], prevDate: null, suburbs: new Map()\n    });\n  }, [cases, dates, selectedSuburbs]);\n\n  const chartData = {\n    datasets: [{\n      backgroundColor: colors.red[500],\n      label: 'Daily new cases',\n      data: data.daily,\n      order: 1\n    },\n    {\n      backgroundColor: colors.indigo[100],\n      label: 'Cumulative totals',\n      data: data.cumulative,\n      type: 'line',\n      order: 2\n    }],\n    labels: dates\n  };\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Totals\"\n    >\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            lg={12}\n            sm={12}\n            xl={12}\n            xs={12}\n          >\n            <Box\n              display=\"flex\"\n              justifyContent=\"center\"\n            >\n              <Typography\n                color=\"textSecondary\"\n                gutterBottom\n                variant=\"h4\"\n              >\n                Daily and cumulative totals\n              </Typography>\n            </Box>\n          </Grid>\n          <Grid\n            item\n            lg={12}\n            sm={12}\n            xl={12}\n            xs={12}\n          >\n            <TotalsChart data={chartData} />\n          </Grid>\n          <Grid\n            item\n            lg={12}\n            sm={12}\n            xl={12}\n            xs={12}\n          >\n            <Box\n              display=\"flex\"\n              justifyContent=\"center\"\n            >\n              <Typography\n                color=\"textSecondary\"\n                gutterBottom\n                variant=\"h5\"\n              >\n                Suburb split\n              </Typography>\n            </Box>\n          </Grid>\n          <Grid\n            item\n            lg={12}\n            sm={12}\n            xl={12}\n            xs={12}\n          >\n            <SuburbSelect onChange={setSelectedSuburbs} />\n          </Grid>\n          {[...data.suburbs.entries()].map(([key, value]) => (\n            <React.Fragment key={key}>\n              <Grid\n                item\n                lg={12}\n                sm={12}\n                xl={12}\n                xs={12}\n              >\n                <Box\n                  display=\"flex\"\n                  justifyContent=\"center\"\n                >\n                  <Typography\n                    color=\"textSecondary\"\n                    gutterBottom\n                    variant=\"h6\"\n                  >\n                    {key}\n                  </Typography>\n                </Box>\n              </Grid>\n              <Grid\n                item\n                lg={12}\n                sm={12}\n                xl={12}\n                xs={12}\n              >\n                <TotalsChart\n                  data={{\n                    datasets: [{\n                      backgroundColor: colors.red[500],\n                      label: 'Daily new cases',\n                      data: value.map((item) => item.diff),\n                      order: 1\n                    },\n                    {\n                      backgroundColor: colors.indigo[100],\n                      label: 'Cumulative totals',\n                      data: value.map((item) => item.value),\n                      type: 'line',\n                      order: 2\n                    }],\n                    labels: dates\n                  }}\n                />\n              </Grid>\n            </React.Fragment>\n          ))}\n        </Grid>\n      </Container>\n    </Page>\n  );\n};\n\nexport default Totals;\n","import React, { useContext, useMemo } from 'react';\nimport {\n  colors,\n  useTheme\n} from '@material-ui/core';\nimport { Bar } from 'react-chartjs-2';\nimport computeHistogram from 'compute-histogram';\nimport { DataContext } from 'src/components/data';\n\nexport const Population = () => {\n  const theme = useTheme();\n  const { population } = useContext(DataContext);\n\n  const data = useMemo(() => {\n    const values = computeHistogram(\n      population\n        .filter((item) => !!item.POA_NAME16 && !isNaN(Number(item.Tot_p_p)))\n        .map((item) => item.Tot_p_p)\n    );\n\n    return {\n      datasets: [\n        {\n          backgroundColor: colors.indigo[500],\n          data: values.map(([_, y]) => y),\n          label: 'Population',\n          barThickness: 'flex',\n          barPercentage: 1.3,\n        }\n      ],\n      labels: values.map((_) => ''),\n    };\n  }, [population]);\n\n  const options = {\n    animation: false,\n    cornerRadius: 0,\n    layout: { padding: 0 },\n    legend: { display: true },\n    maintainAspectRatio: false,\n    responsive: true,\n    scales: {\n      xAxes: [\n        {\n          ticks: {\n            fontColor: theme.palette.text.secondary\n          },\n          gridLines: {\n            display: false,\n            drawBorder: false\n          }\n        }\n      ],\n      yAxes: [\n        {\n          ticks: {\n            fontColor: theme.palette.text.secondary,\n            beginAtZero: true,\n            min: 0\n          },\n          gridLines: {\n            borderDash: [2],\n            borderDashOffset: [2],\n            color: theme.palette.divider,\n            drawBorder: false,\n            zeroLineBorderDash: [2],\n            zeroLineBorderDashOffset: [2],\n            zeroLineColor: theme.palette.divider\n          }\n        }\n      ]\n    },\n    tooltips: {\n      backgroundColor: theme.palette.background.default,\n      bodyFontColor: theme.palette.text.secondary,\n      borderColor: theme.palette.divider,\n      borderWidth: 1,\n      enabled: true,\n      footerFontColor: theme.palette.text.secondary,\n      intersect: false,\n      mode: 'index',\n      titleFontColor: theme.palette.text.primary\n    }\n  };\n\n  return (\n    <Bar\n      height={200}\n      data={data}\n      options={options}\n    />\n  );\n};\n","import React, { useContext, useMemo } from 'react';\nimport {\n  colors,\n  useTheme\n} from '@material-ui/core';\nimport { Bar } from 'react-chartjs-2';\nimport PropTypes from 'prop-types';\nimport computeHistogram from 'compute-histogram';\nimport { DataContext } from 'src/components/data';\n\nexport const Cases = ({ date }) => {\n  const theme = useTheme();\n  const { cases } = useContext(DataContext);\n\n  const data = useMemo(() => {\n    const values = computeHistogram(\n      [...cases\n        .get(date)\n        .values()\n      ]\n        .filter((item) => !isNaN(Number(item.Cases)))\n        .map((item) => item.Cases)\n    );\n\n    return {\n      datasets: [\n        {\n          backgroundColor: colors.red[500],\n          data: values.map(([_, y]) => y),\n          label: 'Total Cases',\n          barThickness: 'flex',\n          barPercentage: 1.3,\n        }\n      ],\n      labels: values.map((_) => ''),\n    };\n  }, [cases, date]);\n\n  const options = {\n    animation: false,\n    cornerRadius: 0,\n    layout: { padding: 0 },\n    legend: { display: true },\n    maintainAspectRatio: false,\n    responsive: true,\n    scales: {\n      xAxes: [\n        {\n          ticks: {\n            fontColor: theme.palette.text.secondary\n          },\n          gridLines: {\n            display: false,\n            drawBorder: false\n          }\n        }\n      ],\n      yAxes: [\n        {\n          ticks: {\n            fontColor: theme.palette.text.secondary,\n            beginAtZero: true,\n            min: 0\n          },\n          gridLines: {\n            borderDash: [2],\n            borderDashOffset: [2],\n            color: theme.palette.divider,\n            drawBorder: false,\n            zeroLineBorderDash: [2],\n            zeroLineBorderDashOffset: [2],\n            zeroLineColor: theme.palette.divider\n          }\n        }\n      ]\n    },\n    tooltips: {\n      backgroundColor: theme.palette.background.default,\n      bodyFontColor: theme.palette.text.secondary,\n      borderColor: theme.palette.divider,\n      borderWidth: 1,\n      enabled: true,\n      footerFontColor: theme.palette.text.secondary,\n      intersect: false,\n      mode: 'index',\n      titleFontColor: theme.palette.text.primary\n    }\n  };\n\n  return (\n    <Bar\n      height={200}\n      data={data}\n      options={options}\n    />\n  );\n};\n\nCases.propTypes = {\n  date: PropTypes.string.isRequired\n};\n","import React, { useContext, useMemo } from 'react';\nimport {\n  colors,\n  useTheme\n} from '@material-ui/core';\nimport { Bar } from 'react-chartjs-2';\nimport PropTypes from 'prop-types';\nimport computeHistogram from 'compute-histogram';\nimport { DataContext } from 'src/components/data';\n\nexport const Active = ({ date }) => {\n  const theme = useTheme();\n  const { cases } = useContext(DataContext);\n\n  const data = useMemo(() => {\n    const values = computeHistogram(\n      [...cases\n        .get(date)\n        .values()\n      ]\n        .filter((item) => !isNaN(Number(item.Active)))\n        .map((item) => item.Cases)\n    );\n\n    return {\n      datasets: [\n        {\n          backgroundColor: colors.red[900],\n          data: values.map(([_, y]) => y),\n          label: 'Active Cases',\n          barThickness: 'flex',\n          barPercentage: 1.3,\n        }\n      ],\n      labels: values.map((_) => ''),\n    };\n  }, [cases, date]);\n\n  const options = {\n    animation: false,\n    cornerRadius: 0,\n    layout: { padding: 0 },\n    legend: { display: true },\n    maintainAspectRatio: false,\n    responsive: true,\n    scales: {\n      xAxes: [\n        {\n          ticks: {\n            fontColor: theme.palette.text.secondary\n          },\n          gridLines: {\n            display: false,\n            drawBorder: false\n          }\n        }\n      ],\n      yAxes: [\n        {\n          ticks: {\n            fontColor: theme.palette.text.secondary,\n            beginAtZero: true,\n            min: 0\n          },\n          gridLines: {\n            borderDash: [2],\n            borderDashOffset: [2],\n            color: theme.palette.divider,\n            drawBorder: false,\n            zeroLineBorderDash: [2],\n            zeroLineBorderDashOffset: [2],\n            zeroLineColor: theme.palette.divider\n          }\n        }\n      ]\n    },\n    tooltips: {\n      backgroundColor: theme.palette.background.default,\n      bodyFontColor: theme.palette.text.secondary,\n      borderColor: theme.palette.divider,\n      borderWidth: 1,\n      enabled: true,\n      footerFontColor: theme.palette.text.secondary,\n      intersect: false,\n      mode: 'index',\n      titleFontColor: theme.palette.text.primary\n    }\n  };\n\n  return (\n    <Bar\n      height={200}\n      data={data}\n      options={options}\n    />\n  );\n};\n\nActive.propTypes = {\n  date: PropTypes.string.isRequired\n};\n","import React, { useContext, useMemo } from 'react';\nimport {\n  colors,\n  useTheme\n} from '@material-ui/core';\nimport { Bar } from 'react-chartjs-2';\nimport PropTypes from 'prop-types';\nimport computeHistogram from 'compute-histogram';\nimport { DataContext } from 'src/components/data';\n\nexport const Recovered = ({ date }) => {\n  const theme = useTheme();\n  const { cases } = useContext(DataContext);\n\n  const data = useMemo(() => {\n    const values = computeHistogram(\n      [...cases\n        .get(date)\n        .values()\n      ]\n        .filter((item) => !isNaN(Number(item.Recovered)))\n        .map((item) => item.Cases)\n    );\n\n    return {\n      datasets: [\n        {\n          backgroundColor: colors.green[700],\n          data: values.map(([_, y]) => y),\n          label: 'Recovered',\n          barThickness: 'flex',\n          barPercentage: 1.3,\n        }\n      ],\n      labels: values.map((_) => ''),\n    };\n  }, [cases, date]);\n\n  const options = {\n    animation: false,\n    cornerRadius: 0,\n    layout: { padding: 0 },\n    legend: { display: true },\n    maintainAspectRatio: false,\n    responsive: true,\n    scales: {\n      xAxes: [\n        {\n          ticks: {\n            fontColor: theme.palette.text.secondary\n          },\n          gridLines: {\n            display: false,\n            drawBorder: false\n          }\n        }\n      ],\n      yAxes: [\n        {\n          ticks: {\n            fontColor: theme.palette.text.secondary,\n            beginAtZero: true,\n            min: 0\n          },\n          gridLines: {\n            borderDash: [2],\n            borderDashOffset: [2],\n            color: theme.palette.divider,\n            drawBorder: false,\n            zeroLineBorderDash: [2],\n            zeroLineBorderDashOffset: [2],\n            zeroLineColor: theme.palette.divider\n          }\n        }\n      ]\n    },\n    tooltips: {\n      backgroundColor: theme.palette.background.default,\n      bodyFontColor: theme.palette.text.secondary,\n      borderColor: theme.palette.divider,\n      borderWidth: 1,\n      enabled: true,\n      footerFontColor: theme.palette.text.secondary,\n      intersect: false,\n      mode: 'index',\n      titleFontColor: theme.palette.text.primary\n    }\n  };\n\n  return (\n    <Bar\n      height={200}\n      data={data}\n      options={options}\n    />\n  );\n};\n\nRecovered.propTypes = {\n  date: PropTypes.string.isRequired\n};\n","import React, { useContext, useMemo } from 'react';\nimport {\n  colors,\n  useTheme\n} from '@material-ui/core';\nimport { Bar } from 'react-chartjs-2';\nimport PropTypes from 'prop-types';\nimport computeHistogram from 'compute-histogram';\nimport { DataContext } from 'src/components/data';\n\nexport const Tests = ({ date }) => {\n  const theme = useTheme();\n  const { tests } = useContext(DataContext);\n\n  const data = useMemo(() => {\n    const testsData = tests.get(date);\n\n    if (!testsData) {\n      return null;\n    }\n\n    const values = computeHistogram(\n      [...tests\n        .get(date)\n        .values()\n      ]\n        .filter((item) => !isNaN(Number(item.Number)))\n        .map((item) => item.Number)\n    );\n\n    return {\n      datasets: [\n        {\n          backgroundColor: colors.indigo[700],\n          data: values.map(([_, y]) => y),\n          label: 'Tests',\n          barThickness: 'flex',\n          barPercentage: 1.3,\n        }\n      ],\n      labels: values.map((_) => ''),\n    };\n  }, [tests, date]);\n\n  const options = {\n    animation: false,\n    cornerRadius: 0,\n    layout: { padding: 0 },\n    legend: { display: true },\n    maintainAspectRatio: false,\n    responsive: true,\n    scales: {\n      xAxes: [\n        {\n          ticks: {\n            fontColor: theme.palette.text.secondary\n          },\n          gridLines: {\n            display: false,\n            drawBorder: false\n          }\n        }\n      ],\n      yAxes: [\n        {\n          ticks: {\n            fontColor: theme.palette.text.secondary,\n            beginAtZero: true,\n            min: 0\n          },\n          gridLines: {\n            borderDash: [2],\n            borderDashOffset: [2],\n            color: theme.palette.divider,\n            drawBorder: false,\n            zeroLineBorderDash: [2],\n            zeroLineBorderDashOffset: [2],\n            zeroLineColor: theme.palette.divider\n          }\n        }\n      ]\n    },\n    tooltips: {\n      backgroundColor: theme.palette.background.default,\n      bodyFontColor: theme.palette.text.secondary,\n      borderColor: theme.palette.divider,\n      borderWidth: 1,\n      enabled: true,\n      footerFontColor: theme.palette.text.secondary,\n      intersect: false,\n      mode: 'index',\n      titleFontColor: theme.palette.text.primary\n    }\n  };\n\n  if (!data) {\n    return null;\n  }\n\n  return (\n    <Bar\n      height={200}\n      data={data}\n      options={options}\n    />\n  );\n};\n\nTests.propTypes = {\n  date: PropTypes.string.isRequired\n};\n","import React, { useState } from 'react';\nimport {\n  Container,\n  Grid,\n  Box,\n  makeStyles,\n  Typography\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport { DateSlider } from 'src/components/date-slider';\nimport { Population } from './population';\nimport { Cases } from './cases';\nimport { Active } from './active';\nimport { Recovered } from './recovered';\nimport { Tests } from './tests';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst Distribution = () => {\n  const classes = useStyles();\n  const [date, setDate] = useState('');\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Distribution\"\n    >\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            lg={12}\n            sm={12}\n            xl={12}\n            xs={12}\n          >\n            <Box\n              display=\"flex\"\n              justifyContent=\"center\"\n            >\n              <Typography\n                color=\"textSecondary\"\n                gutterBottom\n                variant=\"h4\"\n              >\n                Suburb distribution / histograms\n              </Typography>\n            </Box>\n            <Box\n              display=\"flex\"\n              justifyContent=\"center\"\n            >\n              <Typography\n                color=\"textSecondary\"\n                gutterBottom\n                variant=\"h5\"\n              >\n                {date}\n              </Typography>\n            </Box>\n            <DateSlider dateChanged={setDate} />\n          </Grid>\n          <Grid\n            item\n            lg={12}\n            sm={12}\n            xl={12}\n            xs={12}\n          >\n            {date && <Cases date={date} />}\n          </Grid>\n          <Grid\n            item\n            lg={12}\n            sm={12}\n            xl={12}\n            xs={12}\n          >\n            {date && <Active date={date} />}\n          </Grid>\n          <Grid\n            item\n            lg={12}\n            sm={12}\n            xl={12}\n            xs={12}\n          >\n            {date && <Recovered date={date} />}\n          </Grid>\n          <Grid\n            item\n            lg={12}\n            sm={12}\n            xl={12}\n            xs={12}\n          >\n            {date && <Tests date={date} />}\n          </Grid>\n          <Grid\n            item\n            lg={12}\n            sm={12}\n            xl={12}\n            xs={12}\n          >\n            <Population />\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n};\n\nexport default Distribution;\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nconst Header = ({ title }) => (\n  <Typography\n    color=\"textSecondary\"\n    variant=\"h6\"\n  >\n    {title}\n  </Typography>\n);\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nexport const Grid = ({ children }) => (\n  <div className=\"corelation\">\n    <div className=\"population h-header\">\n      <Header title=\"Population\" />\n    </div>\n    <div className=\"cases h-header\">\n      <Header title=\"Total Cases\" />\n    </div>\n    <div className=\"active h-header\">\n      <Header title=\"Active\" />\n    </div>\n    <div className=\"recovered h-header\">\n      <Header title=\"Recovered\" />\n    </div>\n    <div className=\"tests h-header\">\n      <Header title=\"Tests\" />\n    </div>\n\n    <div className=\"population v-header\">\n      <Header title=\"Population\" />\n    </div>\n    <div className=\"cases v-header\">\n      <Header title=\"Total Cases\" />\n    </div>\n    <div className=\"active v-header\">\n      <Header title=\"Active\" />\n    </div>\n    <div className=\"recovered v-header\">\n      <Header title=\"Recovered\" />\n    </div>\n    <div className=\"tests v-header\">\n      <Header title=\"Tests\" />\n    </div>\n\n    {children}\n  </div>\n);\n\nGrid.propTypes = {\n  children: PropTypes.array.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Scatter } from 'react-chartjs-2';\n\nexport const Chart = ({ data, selector, backgroundColor }) => {\n  const chartData = {\n    datasets: [{\n      data: selector(data),\n      backgroundColor\n    }]\n  };\n\n  const options = {\n    animation: false,\n    cornerRadius: 0,\n    layout: { padding: 0 },\n    legend: { display: false },\n    maintainAspectRatio: false,\n    responsive: true,\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }]\n    }\n  };\n\n  return (\n    <Scatter data={chartData} options={options} />\n  );\n};\n\nChart.propTypes = {\n  data: PropTypes.object.isRequired,\n  selector: PropTypes.func.isRequired,\n  backgroundColor: PropTypes.string.isRequired\n};\n","import React from 'react';\nimport { colors } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { Grid } from './grid';\nimport { Chart } from './chart';\nimport { useResize } from './resizeHook';\n\nexport const ChartGrid = ({ data }) => {\n  const [width] = useResize();\n  const tileWidth = width / 5;\n\n  return (\n    <Grid>\n      <div className=\"grid-item population-cases\" style={{ width: tileWidth }}>\n        <Chart\n          data={data}\n          selector={(x) => x.population.cases}\n          backgroundColor={colors.indigo[500]}\n        />\n      </div>\n      <div className=\"grid-item population-active\" style={{ width: tileWidth }}>\n        <Chart\n          data={data}\n          selector={(x) => x.population.active}\n          backgroundColor={colors.indigo[500]}\n        />\n      </div>\n      <div className=\"grid-item population-recovered\" style={{ width: tileWidth }}>\n        <Chart\n          data={data}\n          selector={(x) => x.population.recovered}\n          backgroundColor={colors.indigo[500]}\n        />\n      </div>\n      <div className=\"grid-item population-tests\" style={{ width: tileWidth }}>\n        <Chart\n          data={data}\n          selector={(x) => x.population.tests}\n          backgroundColor={colors.indigo[500]}\n        />\n      </div>\n\n      <div className=\"grid-item cases-population\" style={{ width: tileWidth }}>\n        <Chart\n          data={data}\n          selector={(x) => x.cases.population}\n          backgroundColor={colors.red[500]}\n        />\n      </div>\n      <div className=\"grid-item cases-active\" style={{ width: tileWidth }}>\n        <Chart\n          data={data}\n          selector={(x) => x.cases.active}\n          backgroundColor={colors.red[500]}\n        />\n      </div>\n      <div className=\"grid-item cases-recovered\" style={{ width: tileWidth }}>\n        <Chart\n          data={data}\n          selector={(x) => x.cases.recovered}\n          backgroundColor={colors.red[500]}\n        />\n      </div>\n      <div className=\"grid-item cases-tests\" style={{ width: tileWidth }}>\n        <Chart\n          data={data}\n          selector={(x) => x.cases.tests}\n          backgroundColor={colors.red[500]}\n        />\n      </div>\n\n      <div className=\"grid-item active-population\" style={{ width: tileWidth }}>\n        <Chart\n          data={data}\n          selector={(x) => x.active.population}\n          backgroundColor={colors.red[900]}\n        />\n      </div>\n      <div className=\"grid-item active-cases\" style={{ width: tileWidth }}>\n        <Chart\n          data={data}\n          selector={(x) => x.active.cases}\n          backgroundColor={colors.red[900]}\n        />\n      </div>\n      <div className=\"grid-item active-recovered\" style={{ width: tileWidth }}>\n        <Chart\n          data={data}\n          selector={(x) => x.active.recovered}\n          backgroundColor={colors.red[900]}\n        />\n      </div>\n      <div className=\"grid-item active-tests\" style={{ width: tileWidth }}>\n        <Chart\n          data={data}\n          selector={(x) => x.active.tests}\n          backgroundColor={colors.red[900]}\n        />\n      </div>\n\n      <div className=\"grid-item recovered-population\" style={{ width: tileWidth }}>\n        <Chart\n          data={data}\n          selector={(x) => x.recovered.population}\n          backgroundColor={colors.green[700]}\n        />\n      </div>\n\n      <div className=\"grid-item recovered-cases\" style={{ width: tileWidth }}>\n        <Chart\n          data={data}\n          selector={(x) => x.recovered.cases}\n          backgroundColor={colors.green[700]}\n        />\n      </div>\n      <div className=\"grid-item recovered-active\" style={{ width: tileWidth }}>\n        <Chart\n          data={data}\n          selector={(x) => x.recovered.active}\n          backgroundColor={colors.green[700]}\n        />\n      </div>\n      <div className=\"grid-item recovered-tests\" style={{ width: tileWidth }}>\n        <Chart\n          data={data}\n          selector={(x) => x.recovered.tests}\n          backgroundColor={colors.green[700]}\n        />\n      </div>\n\n      <div className=\"grid-item tests-population\" style={{ width: tileWidth }}>\n        <Chart\n          data={data}\n          selector={(x) => x.tests.population}\n          backgroundColor={colors.indigo[700]}\n        />\n      </div>\n      <div className=\"grid-item tests-cases\" style={{ width: tileWidth }}>\n        <Chart\n          data={data}\n          selector={(x) => x.tests.cases}\n          backgroundColor={colors.indigo[700]}\n        />\n      </div>\n      <div className=\"grid-item tests-active\" style={{ width: tileWidth }}>\n        <Chart\n          data={data}\n          selector={(x) => x.tests.active}\n          backgroundColor={colors.indigo[700]}\n        />\n      </div>\n      <div className=\"grid-item tests-recovered\" style={{ width: tileWidth }}>\n        <Chart\n          data={data}\n          selector={(x) => x.tests.recovered}\n          backgroundColor={colors.indigo[700]}\n        />\n      </div>\n    </Grid>\n  );\n};\n\nChartGrid.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n","import {\n  useState, useCallback, useEffect\n} from 'react';\n\nexport const useResize = (borderWidth = 50) => {\n  const [width, setWidth] = useState(window.innerWidth - borderWidth);\n  const resizeListener = useCallback(\n    () => setWidth(window.innerWidth - borderWidth), [borderWidth]\n  );\n\n  useEffect(() => {\n    window.addEventListener('resize', resizeListener);\n\n    return () => {\n      window.removeEventListener('resize', resizeListener);\n    };\n  }, [borderWidth, resizeListener]);\n\n  return [width];\n};\n","import React, { useMemo } from 'react';\nimport { sampleCorrelation } from 'simple-statistics';\nimport PropTypes from 'prop-types';\nimport { Grid } from './grid';\n\nconst Cell = ({ data, selector }) => {\n  const dataSlice = selector(data);\n\n  const value = useMemo(() => {\n    return sampleCorrelation(\n      dataSlice.map((item) => item.x),\n      dataSlice.map((item) => item.y)\n    )\n      .toFixed(5);\n  }, [dataSlice]);\n\n  if (isNaN(value)) {\n    return null;\n  }\n\n  return (\n    <span className=\"number-box\">\n      {value}\n    </span>\n  );\n};\n\nCell.propTypes = {\n  data: PropTypes.object.isRequired,\n  selector: PropTypes.func.isRequired\n};\n\nexport const NumbersGrid = ({ data }) => {\n  return (\n    <Grid>\n      <div className=\"population-cases\">\n        <Cell data={data} selector={(x) => x.population.cases} />\n      </div>\n      <div className=\"population-active\">\n        <Cell data={data} selector={(x) => x.population.active} />\n      </div>\n      <div className=\"population-recovered\">\n        <Cell data={data} selector={(x) => x.population.recovered} />\n      </div>\n      <div className=\"population-tests\">\n        <Cell data={data} selector={(x) => x.population.tests} />\n      </div>\n\n      <div className=\"cases-population\">\n        <Cell data={data} selector={(x) => x.cases.population} />\n      </div>\n      <div className=\"cases-active\">\n        <Cell data={data} selector={(x) => x.cases.active} />\n      </div>\n      <div className=\"cases-recovered\">\n        <Cell data={data} selector={(x) => x.cases.recovered} />\n      </div>\n      <div className=\"cases-tests\">\n        <Cell data={data} selector={(x) => x.cases.tests} />\n      </div>\n\n      <div className=\"active-population\">\n        <Cell data={data} selector={(x) => x.active.population} />\n      </div>\n      <div className=\"active-cases\">\n        <Cell data={data} selector={(x) => x.active.cases} />\n      </div>\n      <div className=\"active-recovered\">\n        <Cell data={data} selector={(x) => x.active.recovered} />\n      </div>\n      <div className=\"active-tests\">\n        <Cell data={data} selector={(x) => x.active.tests} />\n      </div>\n\n      <div className=\"recovered-population\">\n        <Cell data={data} selector={(x) => x.recovered.population} />\n      </div>\n\n      <div className=\"recovered-cases\">\n        <Cell data={data} selector={(x) => x.recovered.cases} />\n      </div>\n      <div className=\"recovered-active\">\n        <Cell data={data} selector={(x) => x.recovered.active} />\n      </div>\n      <div className=\"recovered-tests\">\n        <Cell data={data} selector={(x) => x.recovered.tests} />\n      </div>\n\n      <div className=\"tests-population\">\n        <Cell data={data} selector={(x) => x.tests.population} />\n      </div>\n      <div className=\"tests-cases\">\n        <Cell data={data} selector={(x) => x.tests.cases} />\n      </div>\n      <div className=\"tests-active\">\n        <Cell data={data} selector={(x) => x.tests.active} />\n      </div>\n      <div className=\"tests-recovered\">\n        <Cell data={data} selector={(x) => x.tests.recovered} />\n      </div>\n    </Grid>\n  );\n};\n\nNumbersGrid.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n","import './correlation.css';\n\nimport React, { useContext, useMemo, useState } from 'react';\nimport {\n  makeStyles,\n  Grid,\n  Typography,\n  Box\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport { DataContext } from 'src/components/data';\nimport { DateSlider } from 'src/components/date-slider';\nimport { Selector } from 'src/components/selector';\nimport { ChartGrid } from './chart-grid';\nimport { NumbersGrid } from './numbers-grid';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  },\n  header: {\n    width: '97%'\n  },\n  slider: {\n    paddingLeft: '30px'\n  }\n}));\n\nconst selectorData = [{\n  key: 'Charts',\n  name: 'Charts'\n}, {\n  key: 'Numbers',\n  name: 'Numbers'\n}];\n\nconst sortArray = (data, compare) => {\n  data.sort(compare);\n  return data;\n};\n\nconst Correlation = () => {\n  const classes = useStyles();\n  const { population, cases, selectedDate } = useContext(DataContext);\n  const [date, setDate] = useState(selectedDate);\n  const [displayType, setDisplayType] = useState(selectorData[0].key);\n\n  const data = useMemo(() => {\n    if (!cases.has(date)) {\n      return [];\n    }\n\n    const entry = cases.get(date);\n\n    const mainData = population.reduce((acc, curr) => {\n      if (!entry.has(curr.POA_NAME16.toString())) {\n        return acc;\n      }\n\n      const caseEntry = entry.get(curr.POA_NAME16.toString());\n      acc.push({\n        population: curr.Tot_p_p,\n        cases: caseEntry.Cases,\n        active: caseEntry.Active,\n        recovered: caseEntry.Recovered,\n        tests: caseEntry.Tests\n      });\n      return acc;\n    }, []);\n\n    const result = {\n      population: {\n        cases: sortArray(\n          mainData.map((item) => ({ x: item.population, y: item.cases })),\n          (a, b) => a.x - b.x\n        ),\n        active: sortArray(\n          mainData.map((item) => ({ x: item.population, y: item.active })),\n          (a, b) => a.x - b.x\n        ),\n        recovered: sortArray(\n          mainData.map((item) => ({ x: item.population, y: item.recovered })),\n          (a, b) => a.x - b.x\n        ),\n        tests: sortArray(\n          mainData.map((item) => ({ x: item.population, y: item.tests })),\n          (a, b) => a.x - b.x\n        ),\n      },\n\n      cases: {\n        population: sortArray(\n          mainData.map((item) => ({ x: item.cases, y: item.population })),\n          (a, b) => a.x - b.x\n        ),\n        active: sortArray(\n          mainData.map((item) => ({ x: item.cases, y: item.active })),\n          (a, b) => a.x - b.x\n        ),\n        recovered: sortArray(\n          mainData.map((item) => ({ x: item.cases, y: item.recovered })),\n          (a, b) => a.x - b.x\n        ),\n        tests: sortArray(\n          mainData.map((item) => ({ x: item.cases, y: item.tests })),\n          (a, b) => a.x - b.x\n        ),\n      },\n\n      active: {\n        population: sortArray(\n          mainData.map((item) => ({ x: item.active, y: item.population })),\n          (a, b) => a.x - b.x\n        ),\n        cases: sortArray(\n          mainData.map((item) => ({ x: item.active, y: item.cases })),\n          (a, b) => a.x - b.x\n        ),\n        recovered: sortArray(\n          mainData.map((item) => ({ x: item.active, y: item.recovered })),\n          (a, b) => a.x - b.x\n        ),\n        tests: sortArray(\n          mainData.map((item) => ({ x: item.active, y: item.tests })),\n          (a, b) => a.x - b.x\n        ),\n      },\n\n      recovered: {\n        population: sortArray(\n          mainData.map((item) => ({ x: item.recovered, y: item.population })),\n          (a, b) => a.x - b.x\n        ),\n        cases: sortArray(\n          mainData.map((item) => ({ x: item.recovered, y: item.cases })),\n          (a, b) => a.x - b.x\n        ),\n        active: sortArray(\n          mainData.map((item) => ({ x: item.recovered, y: item.active })),\n          (a, b) => a.x - b.x\n        ),\n        tests: sortArray(\n          mainData.map((item) => ({ x: item.recovered, y: item.tests })),\n          (a, b) => a.x - b.x\n        ),\n      },\n\n      tests: {\n        population: sortArray(\n          mainData.map((item) => ({ x: item.tests, y: item.population })),\n          (a, b) => a.x - b.x\n        ),\n        cases: sortArray(\n          mainData.map((item) => ({ x: item.tests, y: item.cases })),\n          (a, b) => a.x - b.x\n        ),\n        active: sortArray(\n          mainData.map((item) => ({ x: item.tests, y: item.active })),\n          (a, b) => a.x - b.x\n        ),\n        recovered: sortArray(\n          mainData.map((item) => ({ x: item.tests, y: item.recovered })),\n          (a, b) => a.x - b.x\n        )\n      }\n    };\n\n    return result;\n  }, [population, cases, date]);\n\n  const renderBody = () => {\n    if (displayType === selectorData[0].key) {\n      return (<ChartGrid data={data} />);\n    }\n\n    if (displayType === selectorData[1].key) {\n      return (<NumbersGrid data={data} />);\n    }\n\n    return null;\n  };\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Corelation\"\n    >\n      <Grid\n        container\n        spacing={0}\n        className={classes.header}\n      >\n        <Grid\n          item\n          lg={12}\n          sm={12}\n          xl={12}\n          xs={12}\n        >\n          <Box\n            display=\"flex\"\n            justifyContent=\"center\"\n          >\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"h4\"\n            >\n              Correlation\n            </Typography>\n          </Box>\n          <Box\n            display=\"flex\"\n            justifyContent=\"center\"\n          >\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"h5\"\n            >\n              {date}\n            </Typography>\n          </Box>\n          <Box\n            display=\"flex\"\n            justifyContent=\"center\"\n            className={classes.slider}\n          >\n            <DateSlider dateChanged={setDate} />\n          </Box>\n\n        </Grid>\n        <Grid\n          item\n          lg={12}\n          sm={12}\n          xl={12}\n          xs={12}\n          style={{ paddingLeft: 50 }}\n        >\n          <Selector data={selectorData} selectionChanged={setDisplayType} />\n        </Grid>\n      </Grid>\n      {renderBody()}\n    </Page>\n  );\n};\n\nexport default Correlation;\n","import React from 'react';\nimport { TextField, makeStyles } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: '100%'\n  }\n}));\n\nexport const ChartSelector = ({ options, onChange }) => {\n  const classes = useStyles();\n\n  return (\n    <Autocomplete\n      multiple\n      disableCloseOnSelect\n      className={classes.root}\n      options={options}\n      getOptionLabel={(option) => option.name}\n      renderInput={(params) => <TextField {...params} label=\"Correlation pair\" variant=\"outlined\" />}\n      onChange={(_, value) => onChange(value)}\n    />\n  );\n};\n\nChartSelector.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onChange: PropTypes.func.isRequired\n};\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Scatter } from 'react-chartjs-2';\nimport { useTheme } from '@material-ui/core';\nimport { linearRegression, linearRegressionLine } from 'simple-statistics';\n\nexport const Chart = ({\n  data, name, xName, yName, backgroundColor\n}) => {\n  const theme = useTheme();\n  const lineData = useMemo(() => {\n    const regressionData = data.map((item) => [item.x, item.y]);\n    const line = linearRegressionLine(\n      linearRegression(regressionData)\n    );\n\n    return data.map((item) => ({\n      x: item.x, y: Number(line(item.x).toFixed(3))\n    }));\n  }, [data]);\n\n  const chartData = {\n    datasets: [{\n      data,\n      label: name,\n      tooltipLabel: yName,\n      backgroundColor,\n      order: 2\n    }, {\n      data: lineData,\n      label: 'Regression line',\n      tooltipLabel: `Regression ${yName}`,\n      type: 'line',\n      fill: false,\n      order: 1\n    }]\n  };\n\n  const options = {\n    animation: false,\n    cornerRadius: 0,\n    layout: {\n      padding: {\n        top: 0, left: 0, right: 0, bottom: 50\n      }\n    },\n    legend: { display: true },\n    maintainAspectRatio: false,\n    responsive: true,\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        display: false\n      }]\n    },\n    tooltips: {\n      backgroundColor: theme.palette.background.default,\n      bodyFontColor: theme.palette.text.secondary,\n      borderColor: theme.palette.divider,\n      borderWidth: 1,\n      enabled: true,\n      footerFontColor: theme.palette.text.secondary,\n      intersect: false,\n      mode: 'nearest',\n      titleFontColor: theme.palette.text.primary,\n      callbacks: {\n        title: (item) => `${xName} ${item[0].label}`,\n        label: (item, tooltipData) => `${tooltipData.datasets[item.datasetIndex].tooltipLabel} ${item.value}`\n      }\n    }\n  };\n\n  return (\n    <Scatter height={250} data={chartData} options={options} />\n  );\n};\n\nChart.propTypes = {\n  data: PropTypes.array.isRequired,\n  name: PropTypes.string.isRequired,\n  xName: PropTypes.string.isRequired,\n  yName: PropTypes.string.isRequired,\n  backgroundColor: PropTypes.string.isRequired\n};\n","import { colors } from '@material-ui/core';\n\nexport const options = [\n  {\n    name: 'Population Cases',\n    xName: 'Population',\n    yName: 'Cases',\n    selector: (item) => ({ x: item.population, y: item.cases }),\n    backgroundColor: colors.indigo[500]\n  },\n  {\n    name: 'Population Active',\n    xName: 'Population',\n    yName: 'Active',\n    selector: (item) => ({ x: item.population, y: item.active }),\n    backgroundColor: colors.indigo[500]\n  },\n  {\n    name: 'Population Recovered',\n    xName: 'Population',\n    yName: 'Recovered',\n    selector: (item) => ({ x: item.population, y: item.recovered }),\n    backgroundColor: colors.indigo[500]\n  },\n  {\n    name: 'Population Tests',\n    xName: 'Population',\n    yName: 'Tests',\n    selector: (item) => ({ x: item.population, y: item.tests }),\n    backgroundColor: colors.indigo[500]\n  },\n  {\n    name: 'Cases Population',\n    xName: 'Cases',\n    yName: 'Population',\n    selector: (item) => ({ x: item.cases, y: item.population }),\n    backgroundColor: colors.red[500]\n  },\n  {\n    name: 'Cases Active',\n    xName: 'Cases',\n    yName: 'Active',\n    selector: (item) => ({ x: item.cases, y: item.active }),\n    backgroundColor: colors.red[500]\n  },\n  {\n    name: 'Cases Recovered',\n    xName: 'Cases',\n    yName: 'Recovered',\n    selector: (item) => ({ x: item.cases, y: item.recovered }),\n    backgroundColor: colors.red[500]\n  },\n  {\n    name: 'Cases Tests',\n    xName: 'Cases',\n    yName: 'Tests',\n    selector: (item) => ({ x: item.cases, y: item.tests }),\n    backgroundColor: colors.red[500]\n  },\n  {\n    name: 'Active Population',\n    xName: 'Active',\n    yName: 'Population',\n    selector: (item) => ({ x: item.active, y: item.population }),\n    backgroundColor: colors.red[900]\n  },\n  {\n    name: 'Active Cases',\n    xName: 'Active',\n    yName: 'Cases',\n    selector: (item) => ({ x: item.active, y: item.cases }),\n    backgroundColor: colors.red[900]\n  },\n  {\n    name: 'Active Recovered',\n    xName: 'Active',\n    yName: 'Recovered',\n    selector: (item) => ({ x: item.active, y: item.recovered }),\n    backgroundColor: colors.red[900]\n  },\n  {\n    name: 'Active Tests',\n    xName: 'Active',\n    yName: 'Tests',\n    selector: (item) => ({ x: item.active, y: item.tests }),\n    backgroundColor: colors.red[900]\n  },\n  {\n    name: 'Recovered Population',\n    xName: 'Recovered',\n    yName: 'Population',\n    selector: (item) => ({ x: item.recovered, y: item.population }),\n    backgroundColor: colors.green[700]\n  },\n  {\n    name: 'Recovered Cases',\n    xName: 'Recovered',\n    yName: 'Cases',\n    selector: (item) => ({ x: item.recovered, y: item.cases }),\n    backgroundColor: colors.green[700]\n  },\n  {\n    name: 'Recovered Active',\n    xName: 'Recovered',\n    yName: 'Active',\n    selector: (item) => ({ x: item.recovered, y: item.active }),\n    backgroundColor: colors.green[700]\n  },\n  {\n    name: 'Recovered Tests',\n    xName: 'Recovered',\n    yName: 'Tests',\n    selector: (item) => ({ x: item.recovered, y: item.tests }),\n    backgroundColor: colors.green[700]\n  },\n  {\n    name: 'Tests Population',\n    xName: 'Tests',\n    yName: 'Population',\n    selector: (item) => ({ x: item.tests, y: item.population }),\n    backgroundColor: colors.indigo[700]\n  },\n  {\n    name: 'Tests Cases',\n    xName: 'Tests',\n    yName: 'Cases',\n    selector: (item) => ({ x: item.tests, y: item.cases }),\n    backgroundColor: colors.indigo[700]\n  },\n  {\n    name: 'Tests Active',\n    xName: 'Tests',\n    yName: 'Active',\n    selector: (item) => ({ x: item.tests, y: item.active }),\n    backgroundColor: colors.indigo[700]\n  },\n  {\n    name: 'Tests Recovered',\n    xName: 'Tests',\n    yName: 'Recovered',\n    selector: (item) => ({ x: item.tests, y: item.recovered }),\n    backgroundColor: colors.indigo[700]\n  }\n];\n","import React, { useState, useMemo, useContext } from 'react';\nimport {\n  Container,\n  Grid,\n  Box,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport { DateSlider } from 'src/components/date-slider';\nimport { DataContext } from 'src/components/data';\nimport { ChartSelector } from './chart-selector';\nimport { Chart } from './chart';\nimport { options } from './chart-type-options';\n\nconst sortArray = (data, compare) => {\n  data.sort(compare);\n  return data;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  },\n  paddingBottom: {\n    paddingBottom: '30px'\n  }\n}));\n\nexport const Regression = () => {\n  const classes = useStyles();\n  const [date, setDate] = useState('');\n  const [chartTypes, setChartTypes] = useState([]);\n  const { population, cases } = useContext(DataContext);\n\n  const data = useMemo(() => {\n    if (chartTypes.length <= 0) {\n      return [];\n    }\n\n    if (!cases.has(date)) {\n      return [];\n    }\n\n    const entry = cases.get(date);\n\n    const mainData = population.reduce((acc, curr) => {\n      if (!entry.has(curr.POA_NAME16.toString())) {\n        return acc;\n      }\n\n      const caseEntry = entry.get(curr.POA_NAME16.toString());\n      acc.push({\n        population: curr.Tot_p_p,\n        cases: caseEntry.Cases,\n        active: caseEntry.Active,\n        recovered: caseEntry.Recovered,\n        tests: caseEntry.Tests\n      });\n      return acc;\n    }, []);\n\n    return chartTypes.reduce((acc, curr) => {\n      acc.push({\n        key: curr.name,\n        xName: curr.xName,\n        yName: curr.yName,\n        backgroundColor: curr.backgroundColor,\n        data: sortArray(\n          mainData.map(curr.selector),\n          (a, b) => a.x - b.x\n        )\n      });\n\n      return acc;\n    }, []);\n  }, [population, cases, chartTypes, date]);\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Regression\"\n    >\n      <Container>\n        <Grid container>\n          <Grid\n            item\n            lg={12}\n            sm={12}\n            xl={12}\n            xs={12}\n            className={classes.paddingBottom}\n          >\n            <Box\n              display=\"flex\"\n              justifyContent=\"center\"\n            >\n              <Typography\n                color=\"textSecondary\"\n                gutterBottom\n                variant=\"h4\"\n              >\n                Regression\n              </Typography>\n            </Box>\n            <Box\n              display=\"flex\"\n              justifyContent=\"center\"\n            >\n              <Typography\n                color=\"textSecondary\"\n                gutterBottom\n                variant=\"h5\"\n              >\n                {date}\n              </Typography>\n            </Box>\n            <DateSlider dateChanged={setDate} />\n          </Grid>\n          <Grid\n            item\n            lg={12}\n            sm={12}\n            xl={12}\n            xs={12}\n            className={classes.paddingBottom}\n          >\n            <Box\n              display=\"flex\"\n              justifyContent=\"center\"\n            >\n              <ChartSelector options={options} onChange={setChartTypes} />\n            </Box>\n          </Grid>\n          {data.map((item) => (\n            <Grid\n              key={item.key}\n              item\n              lg={12}\n              sm={12}\n              xl={12}\n              xs={12}\n            >\n              <Chart\n                data={item.data}\n                name={item.key}\n                xName={item.xName}\n                yName={item.yName}\n                backgroundColor={item.backgroundColor}\n              />\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n    </Page>\n  );\n};\n\nexport default Regression;\n","import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport DashboardLayout from 'src/layouts/DashboardLayout';\nimport Dashboard from 'src/views/dashboard';\nimport Totals from 'src/views/totals';\nimport Distribution from 'src/views/distribution';\nimport Correlation from 'src/views/correlation';\nimport Regression from 'src/views/regression';\n\nconst routes = [\n  {\n    path: '/',\n    element: <DashboardLayout />,\n    children: [\n      { path: '/', element: <Navigate to=\"dashboard\" /> },\n      { path: 'dashboard', element: <Dashboard /> },\n      { path: 'totals', element: <Totals /> },\n      { path: 'distribution', element: <Distribution /> },\n      { path: 'correlation', element: <Correlation /> },\n      { path: 'regression', element: <Regression /> }\n    ]\n  }\n];\n\nexport default routes;\n","import React from 'react';\nimport { useRoutes } from 'react-router-dom';\nimport { ThemeProvider, makeStyles } from '@material-ui/core';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport GlobalStyles from 'src/components/GlobalStyles';\nimport { DataProvider, DataConsumer } from 'src//components/data';\nimport theme from 'src/theme';\nimport routes from 'src/routes';\n\nconst useStyles = makeStyles(() => ({\n  progressWrapper: {\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    width: '50%',\n    height: '100%'\n  },\n  progress: {\n    position: 'relative',\n    top: '45%',\n    height: '5px'\n  }\n}));\n\nconst App = () => {\n  const classes = useStyles();\n  const routing = useRoutes(routes, process.env.PUBLIC_URL);\n\n  const renderBody = (data) => (data.loaded ? routing\n    : (\n      <div className={classes.progressWrapper}>\n        <LinearProgress className={classes.progress} />\n      </div>\n    ));\n\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n      <DataProvider>\n        <DataConsumer>\n          {renderBody}\n        </DataConsumer>\n      </DataProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}